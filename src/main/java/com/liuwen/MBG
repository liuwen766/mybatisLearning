MyBatis Generator，简称 MBG，是一个专门为 MyBatis 框架开发者定制的代码生成器，可自动生成
MyBatis 框架所需的实体类、Mapper 接口、Mapper.xml，支持基本的 CRUD 操作，但是一些相对复
杂的 SQL 需要开发者自己来完成。
三步:
1、pom文件中添加依赖。
  <dependency>
         <groupId>org.mybatis.generator</groupId>
         <artifactId>mybatis-generator-core</artifactId>
         <version>1.3.2</version>
  </dependency>
2、创建 MBG 配置⽂文件 generatorConfig.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
        <context id="testTables" targetRuntime="MyBatis3">
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/mybatis?
                        useUnicode=true&amp;characterEncoding=UTF-8"
                        userId="root"
                        password="root"
        ></jdbcConnection>
        <javaModelGenerator targetPackage="com.liuwen.entity"
                targetProject="./src/main/java"></javaModelGenerator>
        <sqlMapGenerator targetPackage="com.liuwen.repository"
                targetProject="./src/main/java"></sqlMapGenerator>
        <javaClientGenerator type="XMLMAPPER"
                targetPackage="com.southwind.repository" targetProject="./src/main/java">
        </javaClientGenerator>
        <table tableName="t_user" domainObjectName="User"></table>
        </context>
</generatorConfiguration>
3.创建 Generator 执行类。(运行该类可以自动生成实体类、repository接口、mapper.xml)

import org.mybatis.generator.api.MyBatisGenerator;
import org.mybatis.generator.config.Configuration;
import org.mybatis.generator.config.xml.ConfigurationParser;
import org.mybatis.generator.exception.InvalidConfigurationException;
import org.mybatis.generator.exception.XMLParserException;
import org.mybatis.generator.internal.DefaultShellCallback;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
public class Main {
        public static void main(String[] args) {
        List<String> warings = new ArrayList<String>();
        boolean overwrite = true;
        String genCig = "/generatorConfig.xml";
        File configFile = new File(Main.class.getResource(genCig).getFile());
        ConfigurationParser configurationParser = new ConfigurationParser(warings);
        Configuration configuration = null;
        try {
                configuration = configurationParser.parseConfiguration(configFile);
        } catch (IOException e) {
                e.printStackTrace();
        } catch (XMLParserException e) {
                e.printStackTrace();
        }
        DefaultShellCallback callback = new DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator = null;
        try {
                myBatisGenerator = new
                MyBatisGenerator(configuration,callback,warings);
        } catch (InvalidConfigurationException e) {
                e.printStackTrace();
        }
        try {
                myBatisGenerator.generate(null);
        } catch (SQLException e) {
                e.printStackTrace();
        } catch (IOException e) {
                e.printStackTrace();
        } catch (InterruptedException e) {
                e.printStackTrace();
        }
    }
}